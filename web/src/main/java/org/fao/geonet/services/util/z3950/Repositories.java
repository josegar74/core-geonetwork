//=============================================================================
//===	Copyright (C) 2001-2007 Food and Agriculture Organization of the
//===	United Nations (FAO-UN), United Nations World Food Programme (WFP)
//===	and United Nations Environment Programme (UNEP)
//===
//===	This program is free software; you can redistribute it and/or modify
//===	it under the terms of the GNU General Public License as published by
//===	the Free Software Foundation; either version 2 of the License, or (at
//===	your option) any later version.
//===
//===	This program is distributed in the hope that it will be useful, but
//===	WITHOUT ANY WARRANTY; without even the implied warranty of
//===	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
//===	General Public License for more details.
//===
//===	You should have received a copy of the GNU General Public License
//===	along with this program; if not, write to the Free Software
//===	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
//===
//===	Contact: Jeroen Ticheler - FAO - Viale delle Terme di Caracalla 2,
//===	Rome - Italy. email: geonetwork@osgeo.org
//==============================================================================

package org.fao.geonet.services.util.z3950;

import jeeves.constants.Jeeves;
import jeeves.server.context.ServiceContext;
import jeeves.utils.Xml;
import org.fao.geonet.GeonetContext;
import org.fao.geonet.constants.Geonet;
import org.fao.geonet.kernel.setting.SettingManager;
import org.jdom.Comment;
import org.jdom.Document;
import org.jdom.Element;

import java.io.FileOutputStream;

//=============================================================================

/** Z3950 Repositories - setup needed for both client and server ops 
  */

public class Repositories
{

	//--------------------------------------------------------------------------

	/** builds the repositories
	  */
	public static boolean build(String appPath, ServiceContext context) 
	{
		try
		{
			//--- build repositories file from template repositories file

			String tempRepo = appPath + Jeeves.Path.WEBINF + "classes/JZKitConfig.xml" +".tem";
			String realRepo = appPath + Jeeves.Path.WEBINF + "classes/JZKitConfig.xml";

            GeonetContext gc = (GeonetContext) context.getHandlerContext(Geonet.CONTEXT_NAME);
            SettingManager sm = gc.getSettingManager();
            boolean allowDTD = sm.getValueAsBool("/system/dtd/enable");
			buildRepositoriesFile(tempRepo, realRepo, allowDTD);

		}
		catch (Exception e)
		{
			context.warning("Cannot initialize Z39.50 repositories : "+ e.getMessage());
			e.printStackTrace();
			return false;
		}
		return true;
	}

	//--------------------------------------------------------------------------
	//---
	//--- Private methods
	//---
	//--------------------------------------------------------------------------

	private static void buildRepositoriesFile(String src, String des, boolean allowDTD) throws Exception
	{
		Element root  = Xml.loadFile(src, allowDTD);

		// --- insert warning into file as comment - first child element
		root.addContent(0,new Comment("\nWARNING - Do NOT MODIFY this file!\n"+
		"It is AUTOMATICALLY GENERATED by GeoNetwork each time it starts up \n"+
		"from the contents of "+src+".\n"));

		//--- now output the repositories file
		FileOutputStream os = new FileOutputStream(des);
		Xml.writeResponse(new Document(root), os);
		os.close();
	}

}

//=============================================================================

